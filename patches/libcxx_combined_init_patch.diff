diff --git a/libcxx/include/__pstl/internal/unseq_backend_simd.h b/libcxx/include/__pstl/internal/unseq_backend_simd.h
index c68a5b99806f..4602eb44a87a 100644
--- a/libcxx/include/__pstl/internal/unseq_backend_simd.h
+++ b/libcxx/include/__pstl/internal/unseq_backend_simd.h
@@ -513,11 +513,11 @@ __simd_scan(_InputIterator __first, _Size __n, _OutputIterator __result, _UnaryO
     _CombinerType __combined_init{__init, &__binary_op};
 
     _PSTL_PRAGMA_DECLARE_REDUCTION(__bin_op, _CombinerType)
-    _PSTL_PRAGMA_SIMD_SCAN(__bin_op : __init_)
+    _PSTL_PRAGMA_SIMD_SCAN(__bin_op : __combined_init)
     for (_Size __i = 0; __i < __n; ++__i)
     {
         __result[__i] = __combined_init.__value_;
-        _PSTL_PRAGMA_SIMD_EXCLUSIVE_SCAN(__init_)
+        _PSTL_PRAGMA_SIMD_EXCLUSIVE_SCAN(__combined_init)
         __combined_init.__value_ = __binary_op(__combined_init.__value_, __unary_op(__first[__i]));
     }
     return std::make_pair(__result + __n, __combined_init.__value_);
@@ -553,11 +553,11 @@ __simd_scan(_InputIterator __first, _Size __n, _OutputIterator __result, _UnaryO
     _CombinerType __combined_init{__init, &__binary_op};
 
     _PSTL_PRAGMA_DECLARE_REDUCTION(__bin_op, _CombinerType)
-    _PSTL_PRAGMA_SIMD_SCAN(__bin_op : __init_)
+    _PSTL_PRAGMA_SIMD_SCAN(__bin_op : __combined_init)
     for (_Size __i = 0; __i < __n; ++__i)
     {
         __combined_init.__value_ = __binary_op(__combined_init.__value_, __unary_op(__first[__i]));
-        _PSTL_PRAGMA_SIMD_INCLUSIVE_SCAN(__init_)
+        _PSTL_PRAGMA_SIMD_INCLUSIVE_SCAN(__combined_init)
         __result[__i] = __combined_init.__value_;
     }
     return std::make_pair(__result + __n, __combined_init.__value_);
