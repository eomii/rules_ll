load("@rules_ll//ll:defs.bzl", "ll_library")

filegroup(
    name = "tsan_headers",
    srcs = [
        "rtl/tsan_defs.h",
        "rtl/tsan_dense_alloc.h",
        "rtl/tsan_fd.h",
        "rtl/tsan_flags.h",
        "rtl/tsan_flags.inc",
        "rtl/tsan_ignoreset.h",
        "rtl/tsan_ilist.h",
        "rtl/tsan_interceptors.h",
        "rtl/tsan_interface.h",
        "rtl/tsan_interface.inc",
        "rtl/tsan_interface_ann.h",
        "rtl/tsan_interface_java.h",
        "rtl/tsan_mman.h",
        "rtl/tsan_mutexset.h",
        "rtl/tsan_platform.h",
        "rtl/tsan_ppc_regs.h",
        "rtl/tsan_report.h",
        "rtl/tsan_rtl.h",
        "rtl/tsan_shadow.h",
        "rtl/tsan_stack_trace.h",
        "rtl/tsan_suppressions.h",
        "rtl/tsan_symbolize.h",
        "rtl/tsan_sync.h",
        "rtl/tsan_trace.h",
        "rtl/tsan_vector_clock.h",
    ],
)

ll_library(
    name = "clang_rt.tsan",
    srcs = [
        # TSAN_SOURCES.
        "rtl/tsan_debugging.cpp",
        "rtl/tsan_external.cpp",
        "rtl/tsan_fd.cpp",
        "rtl/tsan_flags.cpp",
        "rtl/tsan_ignoreset.cpp",
        "rtl/tsan_interceptors_memintrinsics.cpp",
        "rtl/tsan_interceptors_posix.cpp",
        "rtl/tsan_interface.cpp",
        "rtl/tsan_interface_ann.cpp",
        "rtl/tsan_interface_atomic.cpp",
        "rtl/tsan_interface_java.cpp",
        "rtl/tsan_malloc_mac.cpp",
        "rtl/tsan_md5.cpp",
        "rtl/tsan_mman.cpp",
        "rtl/tsan_mutexset.cpp",
        "rtl/tsan_report.cpp",
        "rtl/tsan_rtl.cpp",
        "rtl/tsan_rtl_access.cpp",
        "rtl/tsan_rtl_mutex.cpp",
        "rtl/tsan_rtl_proc.cpp",
        "rtl/tsan_rtl_report.cpp",
        "rtl/tsan_rtl_thread.cpp",
        "rtl/tsan_stack_trace.cpp",
        "rtl/tsan_suppressions.cpp",
        "rtl/tsan_symbolize.cpp",
        "rtl/tsan_sync.cpp",
        "rtl/tsan_vector_clock.cpp",

        # TSAN_ASM_SOURCES.
        "rtl/tsan_rtl_amd64.S",

        # TSAN_PREINIT_SOURCES.
        "rtl/tsan_preinit.cpp",

        # Linux sources.
        "rtl/tsan_platform_linux.cpp",
        "rtl/tsan_platform_posix.cpp",
    ],
    hdrs = [
        ":tsan_headers",
        "//compiler-rt/lib/interception:interception_headers",
        "//compiler-rt/lib/sanitizer_common:sanitizer_impl_headers",
        "//compiler-rt/lib/ubsan:ubsan_headers",
    ],
    angled_includes = ["compiler-rt/lib"],
    compilation_mode = "bootstrap",
    compile_flags = ["-msse4.2"],
    includes = ["compiler-rt/lib"],
    visibility = ["//visibility:public"],
    deps = [
        "//compiler-rt/lib/interception:RTInterception",
        "//compiler-rt/lib/sanitizer_common:RTSanitizerCommon",
        "//compiler-rt/lib/sanitizer_common:RTSanitizerCommonCoverage",
        "//compiler-rt/lib/sanitizer_common:RTSanitizerCommonLibc",
        "//compiler-rt/lib/sanitizer_common:RTSanitizerCommonSymbolizer",
        "//compiler-rt/lib/ubsan:RTUbsan",
    ],
)

ll_library(
    name = "clang_rt.tsan_cxx",
    srcs = [
        "rtl/tsan_new_delete.cpp",
    ],
    hdrs = [
        ":tsan_headers",
        "//compiler-rt/lib/interception:interception_headers",
        "//compiler-rt/lib/sanitizer_common:sanitizer_impl_headers",
        "//compiler-rt/lib/ubsan:ubsan_headers",
    ],
    compilation_mode = "bootstrap",
    compile_flags = ["-msse4.2"],
    includes = ["compiler-rt/lib"],
    visibility = ["//visibility:public"],
    deps = [
        "//compiler-rt/lib/ubsan:RTUbsan_cxx",
    ],
)
