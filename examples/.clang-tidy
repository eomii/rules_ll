---
Checks: |
  -*
  bugprone-*
  cppcoreguidelines-*
  google-*
  misc-*
  modernize-*
  performance-*
  portability-*
  readability-*
  -bugprone-dangling-handle
  -bugprone-fold-init-type
  -bugprone-implicit-widening-of-multiplication-result
  -bugprone-move-forwarding-reference
  -bugprone-narrowing-conversions
  -bugprone-shared-ptr-array-mismatch
  -bugprone-string-integer-assignment
  -bugprone-stringview-nullptr
  -bugprone-swapped-arguments
  -bugprone-unique-ptr-array-mismatch
  -bugprone-use-after-move
  -cppcoreguidelines-missing-std-forward
  -cppcoreguidelines-narrowing-conversions
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay
  -cppcoreguidelines-rvalue-reference-param-not-moved
  -google-build-explicit-make-pair
  -misc-const-correctness
  -misc-include-cleaner
  -misc-uniqueptr-reset-release
  -modernize-make-shared
  -modernize-make-unique
  -modernize-use-nullptr
  -modernize-use-transparent-functors
  -performance-avoid-endl
  -performance-inefficient-algorithm
  -performance-inefficient-string-concatenation
  -performance-move-const-arg
  -performance-unnecessary-value-param
  -portability-std-allocator-const
  -readability-redundant-declaration
  -readability-redundant-smartptr-get
  -readability-redundant-string-cstr
  -readability-redundant-string-init
  -readability-uppercase-literal-suffix

# Note: misc-include-cleaner is pointless with modules and doesn't work well
#       with headers like hip_runtime.h and cuda_runtime.h. Since includes in
#       rules_ll are already fairly strict, we'll disable this.

# TODO: All other warnings should be re-enabled after module compatibility is
#       fixed. Progress at https://github.com/llvm/llvm-project/issues/63939.

WarningsAsErrors: "*"

CheckOptions:
  - key: readability-identifier-naming.NamespaceCase
    value: lower_case
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.StructCase
    value: CamelCase
  - key: readability-identifier-naming.FunctionCase
    value: aNy_CasE
  - key: readability-identifier-naming.VariableCase
    value: lower_case
  - key: readability-identifier-naming.ClassMemberCase
    value: lower_case
  - key: readability-identifier-naming.ClassMemberSuffix
    value: ""
  - key: readability-identifier-naming.PrivateMemberSuffix
    value: _
  - key: readability-identifier-naming.ProtectedMemberSuffix
    value: _
  - key: readability-identifier-naming.EnumConstantCase
    value: CamelCase
  - key: readability-identifier-naming.EnumConstantPrefix
    value: k
  - key: readability-identifier-naming.ConstexprVariableCase
    value: CamelCase
  - key: readability-identifier-naming.ConstexprVariablePrefix
    value: k
  - key: readability-identifier-naming.GlobalConstantCase
    value: CamelCase
  - key: readability-identifier-naming.GlobalConstantPrefix
    value: k
  - key: readability-identifier-naming.MemberConstantCase
    value: CamelCase
  - key: readability-identifier-naming.MemberConstantPrefix
    value: k
  - key: readability-identifier-naming.StaticConstantCase
    value: CamelCase
  - key: readability-identifier-naming.StaticConstantPrefix
    value: k
  - key: readability-implicit-bool-conversion.AllowIntegerConditions
    value: 0
  - key: readability-implicit-bool-conversion.AllowPointerConditions
    value: 0
