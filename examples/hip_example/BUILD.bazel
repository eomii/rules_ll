load(
    "@rules_ll//ll:defs.bzl",
    "OFFLOAD_ALL_AMDGPU",
    "OFFLOAD_ALL_NVPTX",
    "ll_binary",
    "ll_test",
)

ll_binary(
    name = "nvptx",
    srcs = ["example.cpp"],
    compilation_mode = "hip_nvptx",
    compile_flags = OFFLOAD_ALL_NVPTX + [
        "--std=c++20",
    ],
)

ll_binary(
    name = "amdgpu",
    srcs = ["example.cpp"],
    compilation_mode = "hip_amdgpu",
    compile_flags = OFFLOAD_ALL_AMDGPU + [
        "--std=c++20",
    ],
)

# We usually prefer native_test over ll_test, but that won't work here as the
# native rules make it hard to depend on shared libraries.

ll_test(
    name = "nvptx_test",
    size = "small",
    srcs = ["example.cpp"],
    compilation_mode = "hip_nvptx",
    compile_flags = OFFLOAD_ALL_NVPTX + [
        "--std=c++20",
    ],
    tags = ["nvptx"],
    visibility = ["@//:__pkg__"],
)

ll_test(
    name = "amdgpu_test",
    size = "small",
    srcs = ["example.cpp"],
    compilation_mode = "hip_amdgpu",
    compile_flags = OFFLOAD_ALL_AMDGPU + [
        "--std=c++20",
    ],
    tags = ["amdgpu"],
    visibility = ["@//:__pkg__"],
)
